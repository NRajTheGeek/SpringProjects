package edu.nraj.services;

import java.util.LinkedList;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import edu.nraj.dto.ProductReqDTO;
import edu.nraj.dto.ProductResDTO;
import edu.nraj.dto.utils.ProductDTOBuilder;
import edu.nraj.models.AvailabilityZipCode;
import edu.nraj.models.Product;
import edu.nraj.models.Seller;
import edu.nraj.models.Type;
import edu.nraj.repositories.AvailabilityZipCodeRepo;
import edu.nraj.repositories.ProductRepo;
import edu.nraj.repositories.SellerRepo;
import edu.nraj.repositories.TypeRepo;

@Service
public class ProductService {
	@Autowired
	ProductRepo productRepo;
	
	@Autowired
	SellerRepo sellerRepo;
	
	@Autowired
	TypeRepo typeRepo;
	
	@Autowired
	AvailabilityZipCodeRepo availableZipCodeRepo;
	
	@Autowired
	ProductDTOBuilder productDTOCreatorUtil;
	
	public ProductResDTO getProduct(String productId) {
		Product product = productRepo.findByProductId(productId);
		
		ProductResDTO productRes = productDTOCreatorUtil.createProductResponseDTO(product);		
		
		return productRes;
	}
	
	public ProductResDTO saveProduct(ProductReqDTO productDTO) {
		Product productSave = new Product();
		
		for (String availableZipCode : productDTO.getAvailableZipCodes()) {
			AvailabilityZipCode availZipCodeObj = null;
			availZipCodeObj = availableZipCodeRepo.findByZipCode(availableZipCode);
			
			if(availZipCodeObj == null) {
				availZipCodeObj = new AvailabilityZipCode(availableZipCode);
			}
			
			productSave.setAvailabilityZip(availZipCodeObj);
		}
		productSave.setBasePrice(productDTO.getBasePrice());
		productSave.setName(productDTO.getName());
		productSave.setOfferPrice(productDTO.getOfferPrice());
		productSave.setProductId(productDTO.getProductId());
		
		Seller seller = null;
		seller = sellerRepo.findBySellerId(productDTO.getSellerId());
		
		if(seller == null) {
			seller = new Seller(productDTO.getSellerId(), 'A');
			List<Product> products = new LinkedList<Product>();
			products.add(productSave);
			seller.setProducts(products);
		}
		
		productSave.setCreatedAt(new java.sql.Date(0));
		productSave.setCreatedBy(productDTO.getSellerId());
		
		// adding this seller to the seller list
		productSave.setSellers(seller);
		
		Type type = null;
		type = typeRepo.findByTypeId(productDTO.getTypeId());
		
		if(type == null) {
			type = new Type(productDTO.getTypeId(), "AutoGenerated_Name_" + productDTO.getTypeId());
		}
		
		productSave.setType(type);
		
		productSave = productRepo.save(productSave);
		
		ProductResDTO productRes = productDTOCreatorUtil.createProductResponseDTO(productSave);		
		
		return productRes;
	}
	
}
